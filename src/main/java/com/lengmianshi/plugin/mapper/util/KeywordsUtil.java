package com.lengmianshi.plugin.mapper.util;

import java.util.ArrayList;
import java.util.List;

public class KeywordsUtil {
    private static final List<String> KEY_WORD_LIST = new ArrayList() {{
        add("ACCESSIBLE");
        add("ADD");
        add("ALL");
        add("ALTER");
        add("ANALYZE");
        add("AND");
        add("AS");
        add("ASC");
        add("ASENSITIVE");
        add("BEFORE");
        add("BETWEEN");
        add("BIGINT");
        add("BINARY");
        add("BLOB");
        add("BOTH");
        add("BY");
        add("CALL");
        add("CASCADE");
        add("CASE");
        add("CHANGE");
        add("CHAR");
        add("CHARACTER");
        add("CHECK");
        add("COLLATE");
        add("COLUMN");
        add("CONDITION");
        add("CONSTRAINT");
        add("CONTINUE");
        add("CONVERT");
        add("CREATE");
        add("CROSS");
        add("CURRENT_DATE");
        add("CURRENT_TIME");
        add("CURRENT_TIMESTAMP");
        add("CURRENT_USER");
        add("CURSOR");
        add("DATABASE");
        add("DATABASES");
        add("DAY_HOUR");
        add("DAY_MICROSECOND");
        add("DAY_MINUTE");
        add("DAY_SECOND");
        add("DEC");
        add("DECIMAL");
        add("DECLARE");
        add("DEFAULT");
        add("DELAYED");
        add("DELETE");
        add("DESC");
        add("DESCRIBE");
        add("DETERMINISTIC");
        add("DISTINCT");
        add("DISTINCTROW");
        add("DIV");
        add("DOUBLE");
        add("DROP");
        add("DUAL");
        add("EACH");
        add("ELSE");
        add("ELSEIF");
        add("ENCLOSED");
        add("ESCAPED");
        add("EXISTS");
        add("EXIT");
        add("EXPLAIN");
        add("FALSE");
        add("FETCH");
        add("FLOAT");
        add("FOR");
        add("FORCE");
        add("FOREIGN");
        add("FROM");
        add("FULLTEXT");
        add("GOTO");
        add("GRANT");
        add("GROUP");
        add("HAVING");
        add("HIGH_PRIORITY");
        add("HOUR_MICROSECOND");
        add("HOUR_MINUTE");
        add("HOUR_SECOND");
        add("IF");
        add("IGNORE");
        add("IN");
        add("INDEX");
        add("INFILE");
        add("INNER");
        add("INOUT");
        add("INSENSITIVE");
        add("INSERT");
        add("INT");
        add("INTEGER");
        add("INTERVAL");
        add("INTO");
        add("IS");
        add("ITERATE");
        add("JOIN");
        add("KEY");
        add("KEYS");
        add("KILL");
        add("LABEL");
        add("LEADING");
        add("LEAVE");
        add("LEFT");
        add("LIKE");
        add("LIMIT");
        add("LINEAR");
        add("LINES");
        add("LOAD");
        add("LOCALTIME");
        add("LOCALTIMESTAMP");
        add("LOCK");
        add("LONG");
        add("LONGBLOB");
        add("LONGTEXT");
        add("LOOP");
        add("LOW_PRIORITY");
        add("MASTER_BIND");
        add("MASTER_SSL_VERIFY_SERVER_CERT");
        add("MATCH");
        add("MAXVALUE");
        add("MEDIUMBLOB");
        add("MEDIUMINT");
        add("MEDIUMTEXT");
        add("MIDDLEINT");
        add("MINUTE_MICROSECOND");
        add("MINUTE_SECOND");
        add("MOD");
        add("MODIFIES");
        add("NATURAL");
        add("NOT");
        add("NO_WRITE_TO_BINLOG");
        add("NULL");
        add("NUMERIC");
        add("ON");
        add("OPTIMIZE");
        add("OPTION");
        add("OPTIONALLY");
        add("OR");
        add("ORDER");
        add("OUT");
        add("OUTER");
        add("OUTFILE");
        add("PARTITION");
        add("PRECISION");
        add("PRIMARY");
        add("PROCEDURE");
        add("PURGE");
        add("RANGE");
        add("READ");
        add("READS");
        add("READ_WRITE");
        add("REAL");
        add("REFERENCES");
        add("REGEXP");
        add("RELEASE");
        add("RENAME");
        add("REPEAT");
        add("REPLACE");
        add("REQUIRE");
        add("RESTRICT");
        add("RETURN");
        add("REVOKE");
        add("RIGHT");
        add("RLIKE");
        add("SCHEMA");
        add("SCHEMAS");
        add("SECOND_MICROSECOND");
        add("SELECT");
        add("SENSITIVE");
        add("SEPARATOR");
        add("SET");
        add("SHOW");
        add("SMALLINT");
        add("SPATIAL");
        add("SPECIFIC");
        add("SQL");
        add("SQLEXCEPTION");
        add("SQLSTATE");
        add("SQLWARNING");
        add("SQL_BIG_RESULT");
        add("SQL_CALC_FOUND_ROWS");
        add("SQL_SMALL_RESULT");
        add("SSL");
        add("STARTING");
        add("STRAIGHT_JOIN");
        add("TABLE");
        add("TERMINATED");
        add("THEN");
        add("TINYBLOB");
        add("TINYINT");
        add("TINYTEXT");
        add("TO");
        add("TRAILING");
        add("TRIGGER");
        add("TRUE");
        add("UNDO");
        add("UNION");
        add("UNIQUE");
        add("UNLOCK");
        add("UNSIGNED");
        add("UPDATE");
        add("USAGE");
        add("USE");
        add("USING");
        add("UTC_DATE");
        add("UTC_TIME");
        add("UTC_TIMESTAMP");
        add("VALUES");
        add("VARBINARY");
        add("VARCHAR");
        add("VARCHARACTER");
        add("VARYING");
        add("WHEN");
        add("WHERE");
        add("WHILE");
        add("WITH");
        add("WRITE");
        add("XOR");
        add("YEAR_MONTH");
        add("ZEROFILL");
    }};

    public static boolean isKeyword(String fieldName) {
        if (StringUtil.isEmpty(fieldName)) {
            return false;
        }

        return KEY_WORD_LIST.contains(fieldName.toUpperCase());
    }

    public static String convertSafeFieldName(String fieldName) {
        return isKeyword(fieldName) ? ("`" + fieldName + "`") : fieldName;
    }
}
